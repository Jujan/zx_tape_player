default_platform(:ios)

DEVELOPER_APP_ID = ENV["DEVELOPER_APP_ID"]
DEVELOPER_APP_IDENTIFIER = ENV["DEVELOPER_APP_IDENTIFIER"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
APPCENTER_TOKEN = ENV["APPCENTER_TOKEN"]
APPCENTER_USER_NAME = ENV["APPCENTER_USER_NAME"]
APPCENTER_IOS_APP_NAME = ENV["APPCENTER_IOS_APP_NAME"]
DEVELOPER_PORTAL_TEAM_ID = ENV["DEVELOPER_PORTAL_TEAM_ID"]
APP_STORE_CONNECT_API_KEY_VALUE = ENV["APP_STORE_CONNECT_API_KEY_VALUE"]

# Source article
# https://joshuamdeguzman.com/continuous-delivery-for-flutter-using-fastlane-and-github-actions-pt-3-ios/

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: false
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

platform :ios do
  desc "Submit a new iOS Beta Build to AppCenter"
  lane :beta do
    keychain_name = TEMP_KEYCHAIN_USER
    keychain_password = TEMP_KEYCHAIN_PASSWORD
    ensure_temp_keychain(keychain_name, keychain_password)

    api_key = app_store_connect_api_key(
      key_id: "8ZUKW2PYGR",
      issuer_id: "69a6de8f-bfe8-47e3-e053-5b8c7c11a4d1",
      key_content: "#{APP_STORE_CONNECT_API_KEY_VALUE}",
    )

    register_devices(
      api_key: api_key,
      devices_file: "./devices.txt"
    )

    match(
      api_key: api_key,
      type: "adhoc",
      force_for_new_devices: true,
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
      git_basic_authorization: Base64.strict_encode64(ENV["GIT_AUTHORIZATION"]),
      readonly: false,
      keychain_name: keychain_name,
      keychain_password: keychain_password
    )

    gym(
      configuration: "Release",
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_method: "ad-hoc",
      export_options: {
        provisioningProfiles: {
            DEVELOPER_APP_ID => PROVISIONING_PROFILE_SPECIFIER
        }
      }
    )

    appcenter_upload(
      api_token: "#{APPCENTER_TOKEN}",
      owner_name: "#{APPCENTER_USER_NAME}",
      owner_type: "user", # Default is user - set to organization for appcenter organizations
      app_name: "#{APPCENTER_IOS_APP_NAME}",
      destinations: "Testers",
      file: "./Runner.ipa",
      notify_testers: true # Set to false if you don't want to notify testers of your new release (default: `false`)
    )

    delete_temp_keychain(keychain_name)
  end
end