name: Release

on:
  release:
    types: [prereleased, released]

jobs:
    deploy:
      name: Build Release
      runs-on: macos-latest
      env:
        LANE: production

      steps:     
        - name: "Check Lane"
          if: ${{ github.event.release.prerelease }}
          run: echo "Lane Beta has been detected"
          env:
            LANE: beta
            
        - name: Checkout
          uses: actions/checkout@v1
          with: 
            ref: ${{ steps.latest.outputs.tag_name }}

        - name: PWD
          run: pwd
      
        - name: Setup Java
          uses: actions/setup-java@v1
          with:
            java-version: '12.x'

        - name: Setup Flutter
          uses: subosito/flutter-action@v1.4.0
          with:
            channel: stable

        - name: Flutter version
          run: flutter --version

        - name: Cache pub dependencies
          uses: actions/cache@v2
          with:
            path: ${{ env.FLUTTER_HOME }}/.pub-cache
            key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
            restore-keys: ${{ runner.os }}-pub-

        - name: Download pub dependencies
          run: flutter pub get

        - name: Run build_runner
          run: flutter pub run build_runner build --delete-conflicting-outputs

        - name: Run analyzer
          run: flutter analyze

        # --------------- iOS -----------------    
          
        - name: Build iOS App 
          run: flutter build ios --release --no-pub --no-codesign 
            
        - name: Publish iOS 
          uses: maierj/fastlane-action@v2.0.1
          with:
            lane: '$LANE'
            subdirectory: 'ios'
            bundle-install-path: 'vendor/bundle'
          env:
            DELIVER_USERNAME: ${{ secrets.DELIVER_USERNAME }}
            DELIVER_APP_IDENTIFIER: ${{ secrets.DELIVER_APP_IDENTIFIER }}
            DELIVER_TEAM_ID: ${{ secrets.DELIVER_TEAM_ID }}
            DELIVER_DEV_PORTAL_TEAM_ID: ${{ secrets.DELIVER_DEV_PORTAL_TEAM_ID }}
            DELIVER_APP_ID: ${{ secrets.DELIVER_APP_ID }}
            FASTLANE_TEAM_ID: ${{ secrets.DELIVER_DEV_PORTAL_TEAM_ID }}
            FASTLANE_ITC_TEAM_ID: ${{ secrets.DELIVER_TEAM_ID }}
            FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
            MATCH_APP_IDENTIFIER: ${{ secrets.DELIVER_APP_IDENTIFIER }}
            MATCH_USERNAME: ${{ secrets.DELIVER_USERNAME }}
            MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
            MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
   
          
        # ------------- Android ---------------  
          
        - name: Download Android keystore
          id: android_keystore
          uses: timheuer/base64-to-file@v1.0.3
          with:
            fileName: key.jks
            encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

        - name: Create key.properties
          run: |
            echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
            echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
            echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
            echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties 
            
        - name: Update Release Notes
          run: echo "${{ github.event.release.body }}" > android/fastlane/metadata/android/en-US/changelogs/default.txt 
      
        - name: Build Android App 
          run: flutter build appbundle --release --no-pub
          
        - name: Publish Android
          uses: maierj/fastlane-action@v2.0.1
          with:
            lane: '$LANE'
            subdirectory: 'android'
            bundle-install-path: 'vendor/bundle'
          env:
            SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
            SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
               
